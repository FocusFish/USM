swagger: '2.0'
info:
  version: 1.0-SNAPSHOT
  title: USM-information
basePath: /rest
paths:
  /userContext:
    put:
     description: Updates or creates the preferences held in the provided UserContext
     operationId: putUserContext
     consumes:
      - application/json
     produces:
      - application/json
     parameters:
      - 
          description: The user context to be updated
          name: content
          in: body
          required: true
          schema:
            $ref: '#/definitions/UserContext'
     responses:
        '200':
          description: users responses
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
  /userContext/{userName}:
    get:
      description:  Retrieves the UserContext for the specified user
      operationId: getUserContext
      produces:
        - application/json
      parameters:
        -
          description: The name of the user for which we are searching the context
          name: userName
          in: path
          required: true
          type: string
      responses:
        '200':
          description: the UserContext with an OK status
          schema:
            $ref: '#/definitions/UserContext'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'      
  /userContext/{applicationName}/{userName}:
    get:
      description:  Retrieves the UserContext for the specified user
      operationId: getUserContext
      produces:
        - application/json
      parameters:
        -
          description: The name of the application for which we are searching the context
          name: applicationName
          in: path
          required: true
          type: string
        -
          description: The name of the user for which we are searching the context
          name: userName
          in: path
          required: true
          type: string
      responses:
        '200':
          description: the UserContext with an OK status
          schema:
            $ref: '#/definitions/UserContext'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
  /organisation/nation/{nation}:
    get:
      description: Retrieves information about all organisations associated with the provided nation.
      operationId: findOrganisations
      produces:
        - application/json
      parameters:
        -
          description: The name of the nation for which we are searching the organisation
          name: nation
          in: path
          required: true
          type: string
      responses:
        '200':
          description: the matching Organisations with an OK status
          schema:
            type: array
            items:
              $ref: '#/definitions/Organisation'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
  /organisation/{organisationName}:
    get:
      description: Retrieves the Organisation with the provided name.
      operationId: getOrganisation
      
      produces:
        - application/json
      parameters:
        -
          description: The name of the organisation to be searched
          name: organisationName
          in: path
          required: true
          type: string      
      responses:
        '200':
          description: the matching Organisations with an OK status
          type: 
            $ref: '#/definitions/Organisation'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
definitions:
 Channel:
  required:
    - dataFlow
    - service
    - priority
  properties:
   dataFlow:
    type: string
    description: The dataflow value 
   service:
    type: string
    description: The name of the provided service
   priority:
    type: integer
    format: int32
    description: The priority for selecting this channel when many are available
 ContactDetails:
  properties:
   firstName:
    type: string
    description: The first name of the person
   lastName:
    type: string
    description: The last name of the person
   phoneNumber:
    type: string
    description: The phone number of the person
   mobileNumber:
    type: string
    description: The mobile number of the person
   faxNumber:
    type: string
    description: The fax number of the person
   eMail:
    type: string
    description: The email of the person
   organisationName:
    type: string
    description: the name of the associated organisation
 EndPoint:
  required:
    - name 
    - uri
    - enabled
  properties:
   name:
    type: string
    description: The name of the endpoint
  uri:
    type: string
    description: The URI of the end-point
  enabled:
    type: boolean
    description: The status (enabled/disabled) of the end-point
  email:
    type: Sting
    description: The email of the end-point  
  description:
    type: string
    description: The description of the endpoint
  channels:
    type: array
    items:
      $ref: '#/definitions/Channel'
  contactDetails:
    type: array
    items:
      $ref: '#definitions/ContactDetails'
 Organisation:
  required:
    - name
    - nation
    - enabled
  properties:
    name:
      type: string
      description: The name of the organisation
    nation:
      type: string
      description: The ISOA3Code of the country to which organisation belongs
    enabled:  
      type: string
      description: The status (enabled/disabled) of the organisation
    email: 
      type: string
      description: The organisation's email
    description:  
      type: string
      description: A free-text description of the organisation
    parentOrganisation:
      type: string    
      description: The name of the parent organisation
    childOrganisation:
      type: array
      items:
        type: string
      description: The list of child organisation  
    endPoints:
      type: array
      items:
        $ref: '#definitions/EndPoint'
 Feature:
  required:
    - applicationName
    - featureName
  properties:
   applicationName:
    type: string
    description: The name of the application to which this feature belongs
   featureName:
    type: string
    description: The name of the feature
 Role:
  required:
   - roleName
  properties:
   roleName:
    type: string
    description: the name of the role
   features:
    type: array
    items:
      $ref: '#/definitions/Feature'
    description: The list of features associated with this role (a.k.a list of permisions)
 DataSet:
  required:
    - applicationName
    - dataSetName
    - dataCategory
  properties:
    applicationName:
      type: string
      description: The name of the application
    dataSetName:
      type: string
      description: The (application unique) name of the data-set
    dataCategory:
      type: string
      description: The category (or type) of data items included in the data-set
    dataDiscriminator:
      type: string
      description: A discriminator value that identifies the specific data items included in the data-set
 Scope:
  required:
   - scopeName
   - activeFrom
   - activeTo
  properties:
    scopeName:
      type: string
      description: The name of the scope
    activeFrom:
      type: string
      format: date
      description: The moment from where the scope will be active
    activeTo:
      type: string
      format: date
      description: The moment until the scope will be active
    dataFrom:
      type: string
      format: date
      description: For temporal data, the start of the (data) time window
    dataTo:
      type: string
      format: date
      description: For temporal data, the end of the (data) time window
    datasets:
      type: array
      items: 
        $ref: '#/definitions/DataSet'
 Context:
  required:
    - role
    - scope
  properties:
    role:
      type: object 
      $ref: '#/definitions/Role'
    scope:
      type: object
      $ref: '#/definitions/Scope'
 ContextSet:
  required:
    - contexts  
  properties:
    contexts:
      type: array
      items:
        $ref: '#/definitions/Context'
 UserContext:
  required:
   - userName
   - contextSet
  properties:
    userName:
     type: string
     description: Th name of the user for which the context is searched
    application: 
      type: string
      description: The name of the application for which a context might be searched 
    contextSet:
      type: object 
      $ref: '#/definitions/ContextSet'
 errorModel:
    required:
        - statusCode
        - message
    properties:
      statusCode:
        type: integer
        format: int32
      message:
        type: string            