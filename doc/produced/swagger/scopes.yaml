swagger: '2.0'
info:
  version: 1.0-SNAPSHOT
  title: USM-administration
basePath: /rest
paths:
  /scopes:
    post:
      description: Create a new Scope
      operationId: createScope
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
         -
          description: the JWT token authenticating the service requester
          name: authorisation
          in: header
          required: true
          type: string
         -
          description: The new scope to be created
          name: newRole
          required: true
          in: body
          schema:
            $ref: '#/definitions/Scope'
      responses:
         '200':
          description: Scope response
          schema:
            $ref: '#/definitions/Scope'
         default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
    put:
      description: Update an existing scope
      operationId: updateScope
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
         -
          description: the JWT token authenticating the service requester
          name: authorisation
          in: header
          required: true
          type: string
         -
          description: The scope to be updated
          name: updatedScope
          required: true
          in: body
          schema:
            $ref: '#/definitions/Scope'
      responses:
        '200':
          description: scope response
          schema:
            $ref: '#/definitions/Scope'
        '400':
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
	get:
      description: retrieves a list of scopes that meet the provided criteria
      operationId: findScopes
      produces: 
        - application/json
      parameters:
        -
          description: the JWT token authenticating the service requester. Optional if the service requester is authenticated by the J2EE container
          name: authorisation
          in: header
          type: string
        -  
          description: Offset the list of returned results by this amount. Default is zero.
          name: offset
          in: query
          type: integer
          format: int32
        -  
          description: Number of items to retrieve. Default is 10, maximum is 100
          name: limit
          in: query
          type: integer
          format: int32
        -  
          description: Sort column for the retrieved list of data. Default is 'name'.
          name: sortColumn
          in: query
          type: string
        -  
          description: Sort column for the retrieved list of data (ASC, DESC). Default is 'DESC'.
          name: sortDirection
          in: query
          type: string
        - 
          description: the scope
          name: scopeName
          in: query
          type: string
        - 
          description: the application to which the scope is applicable
          name: applicationName
          in: query
          type: string
        - 
          description: the scope status
          name: status
          in: query
          type: string
      responses:
        '200':
          description: scope response
          schema:
            type: object
            properties:
              results:
                type: array
                items:
                  $ref: '#/definitions/Scope'                
              total:
                type: integer
                format: int64
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
  /scopes/{scopeId}:
    get:
      description: retrieves a specific scope by it's identifier
      operationId: getScope
      produces: 
        - application/json
      parameters:
        -
          description: the JWT token authenticating the service requester
          name: authorisation
          in: header
          required: true
          type: string
        -  
          description: the scope identifier
          name: scopeId
          in: path
          required: true
          type: string      
      responses:
        '200':
          description: scope response
          schema:
            $ref: '#/definitions/Scope'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
    delete:
      description: Delete an existing scope
      operationId: deleteScope
      produces:
       - application/json
      parameters:
        -
          description: the token authenticating the service requester
          name: authorisation
          in: header
          required: true
          type: string
        -
          description: The identifier of the scope which must be deleted
          name: scopeId
          required: true
          in: path
          type: string
      responses:
        '200':
          description: response of the operation
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
  /scopes/datasets:
    get:
      description: Finds the datasets matching the provided request
      operationId: finddatasets
      produces:
       - application/json
      parameters: 
        -
          description: the token authenticating the service requester
          name: authorisation
          in: header
          required: true
          type: string
        -
          description: The application name entered for search
          name: application
          required: true
          in: query
          type: string
        -
          description: The category name entered for search
          name: category
          required: true
          in: query
          type: string
      responses:
        '200':
          description: response of the operation of retrieving data sets
          schema:
            type: array
            items:
              $ref: '#/definitions/DataSet'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
definitions:
  DataSet:
    required:
      - name
      - category
      - application
    properties:
       name:
        type: string
        description: The name of the dataSet
       description:
        type: string
        description: The description of the data set
       category:
        type: string
        description: The category of the data security
       discriminator:
        type: string
        description: The discriminator of the data security
       application:
        type: string
        description: The name of the application associated with data set 
       scopes:
        type: array
        items:
          $ref: '#/definitions/Scope'
        description: the scope list which are linked to this data set 
  Scope:
    required:
      - name
      - status
      - activeFrom
      - activeTo
    properties:
      name:
        type: string
        description: The name of the retrieved scope
      description:
        type: string
        description: The description of the retrieved scope
      status:
        type: string
        description: The status (enabled/disabled) of the scope
      dataSets:
        type: array
        items:
          $ref: '#/definitions/DataSet'
        description: the DataSet list which are linked to the current scope
      activeUsers:
        type: integer
        format: int32
        description: the number of users which are actively using the given scope
      activeFrom:
        type: string
        format: date
        description: The date and time when the scope becomes applicable/usable
      activeTo:
        type: string
        format: date
        description: The date and time when the scope stops being applicable/usable
      dataFrom:
        type: string
        format: date
        description: For temporal data, the start of the (data) time window
      dataTo:
        type: string
        format: date
        description: For temporal data, the end of the (data) time window
      scopeId:
        type: integer
        format: int64
        description: The identifier of the scope
  errorModel:
    required:
      - statusCode
      - message
    properties:
      statusCode:
        type: integer
        format: int32
      message:
        type: string
